permissions:
  contents: write

name: Build and Package Source ZIP

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag (e.g., V3)'
        required: true

jobs:
  package:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
    outputs:
      artifact_name: ${{ steps.gen.outputs.artifact_name }}
      release_date: ${{ steps.current_time.outputs.year }}${{ steps.current_time.outputs.month }}${{ steps.current_time.outputs.day }}

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Get current date
        id: current_time
        uses: josStorer/get-current-time@v2
        with:
          format: 'YYYYMMDD'

      - name: Generate artifact filename
        id: gen
        run: |
          TAG=${{ github.event.inputs.version }}
          DATE=${{ steps.current_time.outputs.formattedTime }}
          echo "artifact_name=FileHasher_${TAG}-${DATE}.zip" >> $GITHUB_OUTPUT

      - name: Create ZIP
        run: zip -r "${{ steps.gen.outputs.artifact_name }}" . -x ".git/*" ".github/*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.gen.outputs.artifact_name }}
          path: ${{ steps.gen.outputs.artifact_name }}

  release:
    needs: package
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: notes
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "${{ github.event.inputs.version }}" | head -n1)
          [ -z "$PREV_TAG" ] && PREV_TAG=$(git rev-list --max-parents=0 HEAD)
          git log $PREV_TAG..HEAD --pretty=format:'- %s ([%h](https://github.com/'"$GITHUB_REPOSITORY"'/commit/%H))' > notes.md

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.artifact_name }}
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}-${{ needs.package.outputs.release_date }}
          body_path: notes.md
          draft: false
          prerelease: false

      - name: Upload Release ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ needs.package.outputs.artifact_name }}
          asset_name: ${{ needs.package.outputs.artifact_name }}
          asset_content_type: application/zip
