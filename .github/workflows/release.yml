permissions:
  contents: write

name: Build and Release Source ZIP

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag (e.g., V3)'
        required: true

jobs:
  package:
    name: Package Source Code
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Prepare release variables
        run: |
          DATE=$(date +%Y%m%d)
          TAG=${{ github.event.inputs.version }}
          RELEASE_TITLE="$TAG-$DATE"
          ZIP_NAME="FileHasher_${RELEASE_TITLE}.zip"
          echo "DATE=$DATE" >> $GITHUB_ENV
          echo "RELEASE_TITLE=$RELEASE_TITLE" >> $GITHUB_ENV
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Create source ZIP
        run: |
          zip -r "$ZIP_NAME" . -x ".git/*" ".github/*"

      - name: Upload source artifact
        uses: actions/upload-artifact@v4
        with:
          name: "$ZIP_NAME"
          path: "$ZIP_NAME"

  release:
    name: Create GitHub Release
    needs: package
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository for notes
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Generate release notes from commits
        id: generate_notes
        shell: bash
        run: |
          PREV_TAG=$(git tag --sort=-creatordate \
            | grep -v "${{ github.event.inputs.version }}" \
            | head -n1)
          if [ -z "$PREV_TAG" ]; then
            PREV_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          git log $PREV_TAG..HEAD \
            --pretty=format:'- %s ([%h](https://github.com/'"$GITHUB_REPOSITORY"'/commit/%H))' \
            > notes.md

      - name: Download source artifact
        uses: actions/download-artifact@v4
        with:
          name: "$ZIP_NAME"
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ env.RELEASE_TITLE }}
          body_path: notes.md
          draft: false
          prerelease: false

      - name: Upload Release ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "$ZIP_NAME"
          asset_name: "$ZIP_NAME"
          asset_content_type: application/zip
